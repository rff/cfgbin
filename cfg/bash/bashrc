# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# raoni: i want xterm-color to be default. better would be xterm-256color
#TERM=xterm-color

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000000
HISTFILESIZE=1000000
unset HISTFILESIZE


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac


# raoni: personal PS1
PROMPT_DIRTRIM=2
__PS1__=$PS1
#PS1='[\t \u@\h \w]$(__git_ps1) [$(echo $?)] \$ '
PS1='[\t \u@\h \w]$(__git_ps1) [$CMDRET]\$ '
#PROMPT_COMMAND="CMDRET=\$? ; test \$CMDRET -eq 0 || CMDRET=\033[31m\${CMDRET}\033[0m"
PROMPT_COMMAND='set_promptcmd'

# raoni: awesome PS1 + window manager WINDOW TITLE
function set_promptcmd() {
	CMDRET=$?
#	[ $CMDRET != 0 ] && CMDRET="\e[31m$CMDRET\e[0m"
	set_wname "$(wname_prefix) $0" 
}

# raoni: helper function to print some info for window name.
function wname_prefix() {
	local term_name=${TERM}
	local shell_name=$(basename ${SHELL})
	local shell_name=$0

	[ $term_name == 'rxvt-unicode' ] && term_name='urxvt'

	local name_prefix="${term_name} - [${USER}@${HOSTNAME} $PWD]\$"
	echo $name_prefix
}

# raoni: window manager WINDOW TITLE changer
function set_wname() {
	echo -en "\033]0;$*\007"
}

# raoni: set WINDOW TITLE to command running
trap set_beforecmd DEBUG
function set_beforecmd() {
	case "$BASH_COMMAND" in
		*\033]0*)  # The command is trying to set the title bar as well;
			   # this is most likely the execution of $PROMPT_COMMAND.
			   # In any case nested escapes confuse the terminal, so don't
			   # output them.
		;;
		*) set_wname "$(wname_prefix) ${BASH_COMMAND}"
		;;
	esac
}



# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# raoni: sanity aliais
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'

# raoni: some cool alias
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias .1='cd ..'
alias .2='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

# raoni @ Thu Oct  3 12:58:27 BRT 2013
# alias for my function to test what comes more natural.
alias cl='cs'

# raoni: cool cd replacement
function cs () {
	cd "$@" && ls --color=auto
}


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi


# this is a workaround to bash-completion not recognize __git_ps1.
# https://mailman.archlinux.org/pipermail/arch-general/2012-March/025888.html
# the solution in the thread don't work anymore, read the git completion file
# for more information, it is in two places:
# /usr/share/bash-completion/bash_completion/completions/git
# and
# /usr/share/git/completion/git-completion.bash
#
# what it says is to source /usr/share/git/completion/git-prompt.sh
# in the said file it gives some options that one can set to more eye candys.
GIT_PS1_SHOWDIRTYSTATE="true"
GIT_PS1_SHOWSTASHSTATE="true"
GIT_PS1_SHOWUNTRACKEDFILES="true"
GIT_PS1_SHOWUPSTREAM="auto"
[ -r /usr/share/git/completion/git-prompt.sh ] && . /usr/share/git/completion/git-prompt.sh


umask 077
